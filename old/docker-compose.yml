services:
  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    volumes:
      - .:/var/www/html
      - /var/www/html/storage #Empêche l'écrasement (pb permissions)
      - /var/www/html/vendor
    ports:
      - "${APP_PORT}:80"
    networks:
        - app-network
    depends_on:
      - db
      - redis

  horizon:
      build:
          context: ..
          dockerfile: docker/Dockerfile
      volumes:
          - .:/var/www/html
          - ${RESULTS_PATH}:${RESULTS_PATH_DOCKER}
      networks:
          - app-network
      depends_on:
          - db
          - redis
      command: ["php", "artisan", "horizon"]

  redis:
      image: redis:7.0-alpine
      platform: linux/amd64
      networks:
          - app-network
      ports:
          - "6379:6379"
      command: redis-server --requirepass ${REDIS_PASSWORD}

  scheduler:
      build:
          context: ..
          dockerfile: docker/Dockerfile
      volumes:
          - .:/var/www/html
      networks:
          - app-network
      depends_on:
          - db
          - redis
      command: ["php", "artisan", "schedule:work"]

  db:
    image: mysql:5.7
    platform: linux/amd64
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    networks:
        - app-network
    ports:
      - "${DB_PORT}:3306"
    env_file:
      - ../.env

  nginx:
    image: nginx:alpine
    volumes:
      - .:/var/www/html
      - ./docker/nginx.prod.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
      - "443:443"
    networks:
        - app-network
    depends_on:
      - app
    command: sh -c "chown -R nginx:nginx /var/www/html/storage /var/www/html/bootstrap/cache && chmod -R 775 /var/www/html/storage /var/www/html/bootstrap/cache && nginx -g 'daemon off;'"

volumes:
  db_data:

networks:
    app-network:
        driver: bridge

